// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signin matches snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
    testID="signIn"
  >
    <View
      style={
        Object {
          "paddingBottom": 40,
          "paddingTop": 30,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <RNSVGSvgView
          bbHeight="100"
          bbWidth="100"
          focusable={false}
          height="100"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 100,
                "width": 100,
              },
            ]
          }
          width="100"
        >
          <RNSVGGroup>
            <RNSVGCircle
              cx="50"
              cy="50"
              fill={null}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              r="46"
              stroke={4294967295}
              strokeWidth={2}
            />
            <RNSVGLine
              propList={
                Array [
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={4294967295}
              strokeWidth={1}
              x1="30"
              x2="30"
              y1="0"
              y2="100"
            />
            <RNSVGLine
              propList={
                Array [
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={4294967295}
              strokeWidth={1}
              x1="74"
              x2="74"
              y1="0"
              y2="100"
            />
            <RNSVGLine
              propList={
                Array [
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={4294967295}
              strokeWidth={1}
              x1="0"
              x2="100"
              y1="22"
              y2="22"
            />
            <RNSVGLine
              propList={
                Array [
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={4294967295}
              strokeWidth={1}
              x1="0"
              x2="100"
              y1="74"
              y2="74"
            />
            <RNSVGText
              content={null}
              dx={Array []}
              dy={Array []}
              fill={null}
              font={
                Object {
                  "fontSize": "60",
                  "fontWeight": "bold",
                  "textAnchor": "middle",
                }
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              rotate={Array []}
              stroke={4294967295}
              strokeWidth={2}
              x={
                Array [
                  "52",
                ]
              }
              y={
                Array [
                  "70",
                ]
              }
            >
              <RNSVGTSpan
                content="B"
                dx={Array []}
                dy={Array []}
                font={Object {}}
                rotate={Array []}
                x={Array []}
                y={Array []}
              />
            </RNSVGText>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#0085ff",
          "borderColor": "#ffffff",
          "borderRadius": 10,
          "borderWidth": 1,
          "marginBottom": 20,
          "marginHorizontal": 20,
        }
      }
      testID="loginFormView"
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingRight": 0,
            "paddingVertical": 6,
          }
        }
        testID="loginSelectServiceButton"
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000000",
              },
              Object {
                "fontSize": 17,
                "letterSpacing": 0.2,
              },
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "color": "#ffffff",
                },
                Object {
                  "fontSize": 18,
                },
                Object {
                  "fontWeight": "bold",
                },
              ],
            ]
          }
        >
          Sign in to 
          Bluesky Social
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#52acfe",
              "borderRadius": 6,
              "flexDirection": "row",
              "marginHorizontal": 6,
              "paddingHorizontal": 8,
              "paddingVertical": 6,
            }
          }
        >
          <
            icon="pen"
            size={12}
            style={
              Object {
                "color": "#ffffff",
                "marginRight": 4,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "color": "#000000",
                },
                Object {
                  "fontSize": 17,
                  "letterSpacing": 0.2,
                },
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            Change
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "borderTopColor": "#8bc7fd",
            "borderTopWidth": 1,
            "flexDirection": "row",
          }
        }
      >
        <
          icon="at"
          style={
            Object {
              "color": "white",
              "marginLeft": 10,
            }
          }
        />
        <TextInput
          autoCapitalize="none"
          autoCorrect={false}
          autoFocus={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="Username"
          placeholderTextColor="#bfe1ff"
          style={
            Object {
              "backgroundColor": "#0085ff",
              "borderRadius": 10,
              "color": "#ffffff",
              "flex": 1,
              "fontSize": 18,
              "paddingHorizontal": 12,
              "paddingVertical": 10,
              "width": "100%",
            }
          }
          testID="loginUsernameInput"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "borderTopColor": "#8bc7fd",
            "borderTopWidth": 1,
            "flexDirection": "row",
          }
        }
      >
        <
          icon="lock"
          style={
            Object {
              "color": "white",
              "marginLeft": 10,
            }
          }
        />
        <TextInput
          autoCapitalize="none"
          autoCorrect={false}
          editable={true}
          onChangeText={[Function]}
          placeholder="Password"
          placeholderTextColor="#bfe1ff"
          secureTextEntry={true}
          style={
            Object {
              "backgroundColor": "#0085ff",
              "borderRadius": 10,
              "color": "#ffffff",
              "flex": 1,
              "fontSize": 18,
              "paddingHorizontal": 12,
              "paddingVertical": 10,
              "width": "100%",
            }
          }
          testID="loginPasswordInput"
          value=""
        />
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginHorizontal": 6,
              "opacity": 1,
              "paddingHorizontal": 8,
              "paddingVertical": 6,
            }
          }
          testID="forgotPasswordButton"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000000",
                },
                Object {
                  "fontSize": 17,
                  "letterSpacing": 0.2,
                },
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            Forgot
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          Object {
            "alignItems": "center",
          },
          Object {
            "paddingLeft": 20,
          },
          Object {
            "paddingRight": 20,
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
              },
              Object {
                "fontSize": 17,
                "letterSpacing": 0.2,
              },
              Array [
                Object {
                  "color": "#ffffff",
                },
                Object {
                  "fontSize": 18,
                },
                Object {
                  "paddingLeft": 5,
                },
              ],
            ]
          }
        >
          Back
        </Text>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <ActivityIndicator
        color="#fff"
      />
      <Text
        style={
          Array [
            Object {
              "color": "#000000",
            },
            Object {
              "fontSize": 17,
              "letterSpacing": 0.2,
            },
            Array [
              Object {
                "color": "#ffffff",
              },
              Object {
                "fontSize": 18,
              },
              Object {
                "paddingLeft": 10,
              },
            ],
          ]
        }
      >
        Connecting...
      </Text>
    </View>
  </View>
</View>
`;
