// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Notifications matches snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
    testID="notificationsView"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "paddingBottom": 6,
            "paddingHorizontal": 12,
            "paddingTop": 6,
          },
          Object {
            "backgroundColor": "#ffffff",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 30,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 30,
            "opacity": 1,
            "width": 40,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={30}
          bbWidth={30}
          focusable={false}
          height={30}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 30,
                "width": 30,
              },
            ]
          }
          vbHeight={100}
          vbWidth={100}
          width={30}
        >
          <RNSVGGroup>
            <RNSVGDefs>
              <RNSVGLinearGradient
                gradient={
                  Array [
                    0,
                    -6862849,
                    1,
                    -16742913,
                  ]
                }
                gradientTransform={null}
                gradientUnits={0}
                name="grad"
                x1="0"
                x2="1"
                y1="0"
                y2="1"
              />
            </RNSVGDefs>
            <RNSVGCircle
              cx="50"
              cy="50"
              fill={
                Array [
                  1,
                  "grad",
                ]
              }
              propList={
                Array [
                  "fill",
                ]
              }
              r="50"
            />
            <RNSVGText
              content={null}
              dx={Array []}
              dy={Array []}
              fill={4294967295}
              font={
                Object {
                  "fontSize": "50",
                  "fontWeight": "bold",
                  "textAnchor": "middle",
                }
              }
              propList={
                Array [
                  "fill",
                ]
              }
              rotate={Array []}
              x={
                Array [
                  "50",
                ]
              }
              y={
                Array [
                  "67",
                ]
              }
            >
              <RNSVGTSpan
                content="T"
                dx={Array []}
                dy={Array []}
                font={Object {}}
                rotate={Array []}
                x={Array []}
                y={Array []}
              />
            </RNSVGText>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        pointerEvents="none"
        style={
          Object {
            "alignItems": "baseline",
            "flexDirection": "row",
            "marginRight": "auto",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
              },
              Object {
                "fontSize": 20,
                "fontWeight": "500",
                "letterSpacing": 0.15,
              },
              Object {
                "color": "#000000",
              },
            ]
          }
          testID="headerTitle"
        >
          Notifications
        </Text>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f8f3f3",
            "borderRadius": 20,
            "flexDirection": "row",
            "height": 36,
            "justifyContent": "center",
            "opacity": 1,
            "width": 36,
          }
        }
      >
        <
          icon="plus"
          size={18}
          style={
            Object {
              "color": "#000000",
            }
          }
        />
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f8f3f3",
            "borderRadius": 20,
            "flexDirection": "row",
            "height": 36,
            "justifyContent": "center",
            "marginLeft": 4,
            "opacity": 1,
            "width": 36,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={18}
          bbWidth={18}
          color={4278190080}
          fill="none"
          focusable={false}
          height={18}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke="currentColor"
          strokeWidth={3}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#000000",
              },
              Object {
                "flex": 0,
                "height": 18,
                "width": 18,
              },
            ]
          }
          tintColor={4278190080}
          vbHeight={24}
          vbWidth={24}
          width={18}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={
              Array [
                2,
              ]
            }
            strokeWidth={3}
          >
            <RNSVGPath
              d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
              propList={
                Array [
                  "strokeLinecap",
                  "strokeLinejoin",
                ]
              }
              strokeLinecap={1}
              strokeLinejoin={1}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f8f3f3",
            "borderRadius": 20,
            "flexDirection": "row",
            "height": 36,
            "justifyContent": "center",
            "marginLeft": 4,
            "opacity": 1,
            "width": 36,
          }
        }
      >
        <
          icon="signal"
          size={16}
          style={
            Object {
              "color": "#000000",
            }
          }
        />
        <
          icon="x"
          size={8}
          style={
            Object {
              "backgroundColor": "#f8f3f3",
              "bottom": 7,
              "color": "#ec4899",
              "position": "absolute",
              "right": 7,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        data={
          Array [
            Object {
              "_reactKey": "item-1",
              "author": Object {
                "declaration": Object {
                  "actorType": "",
                  "cid": "",
                },
                "did": "test did",
                "handle": "test.handle",
              },
              "cid": "",
              "copy": [MockFunction],
              "fetchAdditionalData": [MockFunction],
              "indexedAt": "",
              "isAssertion": false,
              "isFollow": false,
              "isInvite": false,
              "isMention": false,
              "isRead": true,
              "isReply": false,
              "isRepost": false,
              "isTrend": false,
              "isUpvote": true,
              "needsAdditionalData": false,
              "reason": "test reason",
              "rootStore": Object {},
              "subjectUri": "testuri",
              "toSupportedRecord": [MockFunction],
              "uri": "testuri",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onRefresh={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        refreshing={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        testID="feedFlatList"
        viewabilityConfigCallbackPairs={Array []}
      >
        <RCTRefreshControl />
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "borderTopWidth": 1,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#ffffff",
                  },
                  Object {
                    "borderColor": "#e4e2e2",
                  },
                  undefined,
                ]
              }
              testID="linkButton-/profile/testuri/post/"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "width": 35,
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={26}
                    bbWidth={26}
                    color={4293675161}
                    focusable={false}
                    height={26}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Array [
                          Object {
                            "marginRight": 10,
                            "marginTop": 4,
                          },
                          Object {
                            "color": "#ec4899",
                          },
                          Object {
                            "position": "relative",
                            "top": -4,
                          },
                        ],
                        Object {
                          "flex": 0,
                          "height": 26,
                          "width": 26,
                        },
                      ]
                    }
                    tintColor={4293675161}
                    vbHeight={14}
                    vbWidth={14}
                    width={26}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 7 3 L 2 8 L 4.5 8 L 4.5 11.5 L 9.5 11.5 L 9.5 8 L 12 8 L 7 3 Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                            "strokeWidth",
                            "strokeLinecap",
                            "strokeLinejoin",
                          ]
                        }
                        stroke={
                          Array [
                            2,
                          ]
                        }
                        strokeLinecap={1}
                        strokeLinejoin={1}
                        strokeWidth={1.3}
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "marginRight": 3,
                          "opacity": 1,
                        }
                      }
                      testID="linkButton-/profile/test.handle"
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight={30}
                        bbWidth={30}
                        focusable={false}
                        height={30}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "flex": 0,
                              "height": 30,
                              "width": 30,
                            },
                          ]
                        }
                        vbHeight={100}
                        vbWidth={100}
                        width={30}
                      >
                        <RNSVGGroup>
                          <RNSVGDefs>
                            <RNSVGLinearGradient
                              gradient={
                                Array [
                                  0,
                                  -2424577,
                                  1,
                                  -6862849,
                                ]
                              }
                              gradientTransform={null}
                              gradientUnits={0}
                              name="grad"
                              x1="0"
                              x2="1"
                              y1="0"
                              y2="1"
                            />
                          </RNSVGDefs>
                          <RNSVGCircle
                            cx="50"
                            cy="50"
                            fill={
                              Array [
                                1,
                                "grad",
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                            r="50"
                          />
                          <RNSVGText
                            content={null}
                            dx={Array []}
                            dy={Array []}
                            fill={4294967295}
                            font={
                              Object {
                                "fontSize": "50",
                                "fontWeight": "bold",
                                "textAnchor": "middle",
                              }
                            }
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                            rotate={Array []}
                            x={
                              Array [
                                "50",
                              ]
                            }
                            y={
                              Array [
                                "67",
                              ]
                            }
                          >
                            <RNSVGTSpan
                              content="T"
                              dx={Array []}
                              dy={Array []}
                              font={Object {}}
                              rotate={Array []}
                              x={Array []}
                              y={Array []}
                            />
                          </RNSVGText>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                        "paddingBottom": 2,
                        "paddingTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                          "paddingRight": 3,
                        }
                      }
                      testID="linkButton-/profile/test.handle"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#000000",
                            },
                            Object {
                              "fontSize": 16,
                              "letterSpacing": 0.25,
                            },
                            Array [
                              Object {
                                "color": "#000000",
                              },
                              Object {
                                "fontWeight": "bold",
                              },
                            ],
                          ]
                        }
                      >
                        test.handle
                      </Text>
                    </View>
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                          },
                          Object {
                            "fontSize": 16,
                            "letterSpacing": 0.25,
                          },
                          Array [
                            Object {
                              "paddingRight": 3,
                            },
                            Object {
                              "color": "#000000",
                            },
                          ],
                        ]
                      }
                    >
                      upvoted your post
                    </Text>
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                          },
                          Object {
                            "fontSize": 16,
                            "letterSpacing": 0.25,
                          },
                          Array [
                            Object {
                              "paddingRight": 3,
                            },
                            Object {
                              "color": "#645454",
                            },
                          ],
                        ]
                      }
                    >
                      Invalid Date
                    </Text>
                  </View>
                  <View
                    testID="emptyAdditionalPost"
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
