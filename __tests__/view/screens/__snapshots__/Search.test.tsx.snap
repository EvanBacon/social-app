// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search matches snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
        },
        Object {
          "flex": 1,
        },
      ]
    }
    testID="searchScreen"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "paddingBottom": 6,
            "paddingHorizontal": 12,
            "paddingTop": 6,
          },
          Object {
            "backgroundColor": "#ffffff",
          },
        ]
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 30,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "height": 40,
            "opacity": 1,
            "width": 50,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={40}
          bbWidth={40}
          focusable={false}
          height={40}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          vbHeight={100}
          vbWidth={100}
          width={40}
        >
          <RNSVGGroup>
            <RNSVGDefs>
              <RNSVGLinearGradient
                gradient={
                  Array [
                    0,
                    -6862849,
                    1,
                    -16742913,
                  ]
                }
                gradientTransform={null}
                gradientUnits={0}
                name="grad"
                x1="0"
                x2="1"
                y1="0"
                y2="1"
              />
            </RNSVGDefs>
            <RNSVGCircle
              cx="50"
              cy="50"
              fill={
                Array [
                  1,
                  "grad",
                ]
              }
              propList={
                Array [
                  "fill",
                ]
              }
              r="50"
            />
            <RNSVGText
              content={null}
              dx={Array []}
              dy={Array []}
              fill={4294967295}
              font={
                Object {
                  "fontSize": "50",
                  "fontWeight": "bold",
                  "textAnchor": "middle",
                }
              }
              propList={
                Array [
                  "fill",
                ]
              }
              rotate={Array []}
              x={
                Array [
                  "50",
                ]
              }
              y={
                Array [
                  "67",
                ]
              }
            >
              <RNSVGTSpan
                content="T"
                dx={Array []}
                dy={Array []}
                font={Object {}}
                rotate={Array []}
                x={Array []}
                y={Array []}
              />
            </RNSVGText>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        pointerEvents="none"
        style={
          Object {
            "alignItems": "baseline",
            "flexDirection": "row",
            "marginRight": "auto",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
              },
              Object {
                "fontSize": 24,
                "fontWeight": "500",
              },
              Object {
                "color": "#000000",
              },
            ]
          }
          testID="headerTitle"
        >
          Search
        </Text>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 20,
            "flexDirection": "row",
            "height": 36,
            "justifyContent": "center",
            "marginLeft": 4,
            "opacity": 1,
            "width": 36,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={26}
          bbWidth={26}
          color={4278190080}
          fill="none"
          focusable={false}
          height={26}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke="currentColor"
          strokeWidth={3}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#000000",
              },
              Object {
                "flex": 0,
                "height": 26,
                "width": 26,
              },
            ]
          }
          tintColor={4278190080}
          vbHeight={24}
          vbWidth={24}
          width={26}
        >
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={
              Array [
                2,
              ]
            }
            strokeWidth={3}
          >
            <RNSVGPath
              d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
              propList={
                Array [
                  "strokeLinecap",
                  "strokeLinejoin",
                ]
              }
              strokeLinecap={1}
              strokeLinejoin={1}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 20,
            "flexDirection": "row",
            "height": 36,
            "justifyContent": "center",
            "marginLeft": 4,
            "opacity": 1,
            "width": 36,
          }
        }
      >
        <
          icon="signal"
          size={23}
          style={
            Object {
              "color": "#000000",
            }
          }
        />
        <
          icon="x"
          size={10}
          style={
            Object {
              "backgroundColor": "#ffffff",
              "bottom": 7,
              "color": "#ec4899",
              "position": "absolute",
              "right": 0,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "borderColor": "#e4e2e2",
          },
          Object {
            "borderTopWidth": 1,
            "flexDirection": "row",
            "paddingHorizontal": 16,
            "paddingVertical": 16,
          },
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        color={4278190080}
        fill="none"
        focusable={false}
        height={24}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="currentColor"
        strokeWidth={2}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#000000",
              },
              Object {
                "alignSelf": "center",
                "marginRight": 10,
              },
            ],
            Object {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        tintColor={4278190080}
        vbHeight={24}
        vbWidth={24}
        width={24}
      >
        <RNSVGGroup
          fill={null}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          stroke={
            Array [
              2,
            ]
          }
          strokeWidth={2}
        >
          <RNSVGPath
            d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
            propList={
              Array [
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            strokeLinecap={1}
            strokeLinejoin={1}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
      <TextInput
        onChangeText={[Function]}
        placeholder="Type your query here..."
        placeholderTextColor="#645454"
        returnKeyType="search"
        selectTextOnFocus={true}
        style={
          Array [
            Object {
              "color": "#000000",
            },
            Object {
              "flex": 1,
              "fontSize": 16,
            },
          ]
        }
        testID="searchTextInput"
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "paddingHorizontal": 14,
                "paddingVertical": 30,
              },
              Object {
                "backgroundColor": "#ec4899",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "marginBottom": 10,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 30,
                    "height": 50,
                    "justifyContent": "center",
                    "marginRight": 5,
                    "width": 50,
                  },
                  Object {
                    "backgroundColor": "#d1106f",
                  },
                ]
              }
            >
              <
                icon="exclamation"
                size={24}
                style={
                  Object {
                    "color": "#ffffff",
                  }
                }
              />
            </View>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000000",
                },
                Object {
                  "fontSize": 24,
                  "fontWeight": "500",
                },
                Array [
                  Object {
                    "marginBottom": 10,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#ffffff",
                  },
                ],
              ]
            }
          >
            Failed to load suggestions
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#000000",
                },
                Object {
                  "fontSize": 17,
                  "letterSpacing": 0.2,
                },
                Array [
                  Object {
                    "marginBottom": 20,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#ffe6f2",
                  },
                ],
              ]
            }
          >
            There was an error while trying to load suggested follows.
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#000000",
                },
                Object {
                  "fontSize": 14,
                  "letterSpacing": 0.25,
                },
                Array [
                  Object {
                    "marginBottom": 20,
                    "overflow": "hidden",
                    "paddingHorizontal": 14,
                    "paddingVertical": 10,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#ec4899",
                  },
                  Object {
                    "backgroundColor": "#ffffff",
                  },
                ],
              ]
            }
            testID="undefined-details"
          >
            TypeError: Cannot read properties of undefined (reading 'getSuggestions')
          </Text>
          <View
            style={
              Object {
                "alignItems": "center",
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#d1106f",
                  "flexDirection": "row",
                  "opacity": 1,
                  "paddingHorizontal": 16,
                  "paddingVertical": 10,
                }
              }
              testID="errorScreenTryAgainButton"
            >
              <
                icon="arrows-rotate"
                size={16}
                style={
                  Object {
                    "color": "#ffffff",
                  }
                }
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000000",
                    },
                    Object {
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.5,
                    },
                    Array [
                      Object {
                        "marginLeft": 5,
                      },
                      Object {
                        "color": "#ffffff",
                      },
                    ],
                  ]
                }
              >
                Try again
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
